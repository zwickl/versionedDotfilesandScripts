
# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

function scr(){
    if [ ! -e "$1" ];then
        cp .template $1
    fi
    vi +3 $1
}

#determine OS type
OS='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   OS='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   OS='darwin'
elif [[ ${unamestr:0:6} == 'CYGWIN' ]]; then
   OS='cygwin'
fi

IP='127.0.0.1'
if [[ $OS == 'darwin' ]]; then
#first try getting ethernet address, then airport
    IP=`ipconfig getifaddr en0 &> /dev/null`
    if [ $? = 1 ]; then
        IP=`ipconfig getifaddr en1`
    fi
elif [[ $OS == 'cygwin' ]]; then
    IP=`ipconfig | grep IPv4 | grep -o '[0-9.]*$'`
else
    IP=`hostname -i`
fi

#sytem variables
#export MANPATH=`manpath`:/home/zwickl/my_usr/share/man/
#export PS1="\w/ $ "

#machines
export UMDGPU=cbcbgpu01.umiacs.umd.edu
export AMAZON=zwickl@ec2-184-72-132-13.compute-1.amazonaws.com
export HAL=hal.biosci.arizona.edu

#ssh aliases
alias hal='ssh $HAL'

#machine dependent stuff

if [ $OS = "darwin" ];then

    #alias paup=paup4a147_osx
    alias figtree="java -jar /Applications/FigTree\ v1.4.4.app/Contents/Resources/Java/figtree.jar"

    export DESK=$HOME/Desktop/
	export DEV=$DESK/GarliDEV/
	export EF=$DESK/efish/april08/
	export WIN=$EF/selection/windowStuff/
	export NCL=$DEV/ncl/ncl-github/
	export NCL_INST=$NCL/builds/gccNoDynamic.NCL_CONST_FUNCS/installed/
	export NCL_INSTALL_DIR=$NCL/builds/gccNoDynamic/installed/

    export  XCTOOLS=`xcode-select -p`/Toolchains/XcodeDefault.xctoolchain//usr/bin
    export PATH=$XCTOOLS:$BREW_BIN:$HOME/bin:$HOME/bin/pyscripts:$HOME/bin/biopython:$HOME/bin/generalScripts:$HOME/bin/$MACHTYPE:$NCL_INST/bin:$HOME/Desktop/code/MUMmer3.23/:/usr/bin/:/usr/local/bin:/Users/zwickl/.cargo/bin:$PATH
    #export DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH:/Users/zwickl/Desktop/GarliDEV/googleCodeRepo/branches/beagle/beagle-lib/builds/gccDefaults/installed/lib
    export DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH:/Users/zwickl/Desktop/GarliDEV//beagle/beagle-lib/builds/default/installed/usr/local/lib
    export LD_LIBRARY_PATH=/Users/zwickl/Desktop/GarliDEV//beagle/beagle-lib/builds/default/installed/usr/local/lib/:$LD_LIBRAY_PATH
    PATH="/Library/Frameworks/Python.framework/Versions/Current/bin:$PATH"
	
    #PATH=$HOME/my_usr/bin:$HOME/my_usr/local/bin:$PATH:/usr/local/cuda/bin
	#PATH=$PATH:$HOME/my_usr/bin:$HOME/my_usr/local/bin:/usr/local/cuda/bin
    
    #PATH=/usr/local/ActivePerl-5.14/bin/:$PATH
	GNUTERM=x11
    function rrun(){
         rustc $1.rs && ./$1
     }
    alias ls='ls -G'
    alias Dendroscope='/Applications/Dendroscope3.2/Dendroscope.app/Contents/MacOS/JavaApplicationStub -g'
    alias inkscape="/Applications/Inkscape.app/Contents/Resources/bin/inkscape"
    export PYGOT=$DEV/experiments/pygot/
    export TERRAPHY=$DEV/experiments/terraces/terraphyDEV/postStrokeWork.terraphy

    export WORKON_HOME=$HOME/virtual-environments/
elif [ $OS = "cygwin" ];then
	export HOMEDRIVE=/cygdrive/c/
	export DESK=/cygdrive/f/Desk/
    export DEV=$DESK/GarliDEV/
    export NCL=$DEV/ncl/
	export NCL_INST=$NCL/branches/v2.1/builds/gccNoDynamic.NCL_CONST_FUNCS/installed/
	export PROJ=$TRUNK/project/standardGarliVC/
	PATH=$PATH:/cygdrive/c/Program\ Files/Java/jre6/bin/
	PATH=$PATH:$HOME/bin/pyscripts/:/cygdrive/c/Program\ Files/NCBI/blast-2.2.25/bin/
	PATH=$PATH:/usr/local/emboss/bin/
	PATH=/usr/bin:$PATH
	alias backupHomeToG='rsync -av --exclude-from=/home/zwickl/.rsyncBackupExclude /cygdrive/c/Documents\ and\ settings/zwickl/ /cygdrive/g/derrickHomeBackup/'
	alias backupHomeToI='rsync -av --exclude-from=/home/zwickl/.rsyncBackupExclude /cygdrive/c/Documents\ and\ settings/zwickl/ /cygdrive/i/derrickHomeBackup/'
	alias backupHomeToJ='rsync -av --exclude-from=/home/zwickl/.rsyncBackupExclude /cygdrive/c/Documents\ and\ settings/zwickl/ /cygdrive/j/derrickHomeBackup/'
	alias syncWorkDeskUp='rsync -avzu --exclude-from=/home/zwickl/.syncExclude /cygdrive/f/Desk/ $MONTY:WIN_SYNC/Desk/'
	alias syncWorkDeskDown='rsync -avz --exclude-from=/home/zwickl/.syncExclude $MONTY:WIN_SYNC/Desk/ /cygdrive/f/Desk/'
    alias ls='ls --color=auto'
elif [ $OS = "linux" ];then
    export PATH=$HOME/bin:/usr/local/bin:$PATH:$HOME/bin/pyscripts:$HOME/bin/biopython:$HOME/bin/generalScripts:$HOME/bin/$MACHTYPE:$NCL_INST/bin:$HOME/code/MUMmer3.23/
	PATH=/home/zwickl/my_usr/local/bin/:/home/zwickl/my_usr/bin/:$PATH:/home/zwickl/bin/:/share/apps/bin/:/share/apps/opt/gdb/bin/:/usr/local/cuda/bin:/share/apps/opt/gcc/bin/
    PATH=$PATH:$HOME/libbuilds/lagan20/
    PATH=/share/apps/subversion/bin/:$PATH
	export PYTHONPATH=/home/zwickl/my_usr/lib/python2.7/:/home/zwickl/my_usr/lib/python/:/share/apps/Python-2.6.4/lib/python2.6/
	export LD_LIBRARY_PATH=/opt/rocks/lib/mysql/:/home/zwickl/googleCodeRepo/branches/beagle/beagle-lib/builds/gccDefault/installed/lib:$LD_LIBRARY_PATH
	export DEV=$HOME
	export NCL=/home/zwickl/ncl/
	export NCL_INST=$NCL/ncl-2.1/builds/gccNoDynamic/installed/
    #unset MAFFT_BINARIES
    alias ls='ls --color=auto'
	#alias qa='qstat -u "*" | sort | grep [0-9]' 
    alias sq='squeue'
    alias sqz='squeue -u zwickl'
    alias cqz='squeue -u zwickl | grep -v JOBID | wc -l '
	alias qz='qstat -u zwickl | sort | grep [0-9]' 
	alias devQrsh='qrsh -q dev.q -l h_vmem=4G -l vf=4G'
	alias ViewLog='vi $TESTS/RUNLOG.log'
	alias ViewTests='vi $TESTS/TESTRESULTS.log'
	alias c0='ssh compute-0-0'
	alias backupToPhylo='rsync --progress -avz --exclude-from=$HOME/.rsync_exclude $HOME/ $PHYLO:fromKwy/'
    alias emergencyShutdownHal='sudo rocks run host command=shutdown'
fi

LD_FLAGS=-L/Library/Developer/CommandLineTools/SDKs/MacOSX11.sdk/usr/lib:/Library/Developer/CommandLineTools/SDKs/MacOSX11.sdk//System/Library/Frameworks:$LD_FLAGS

#filesystem locations - largely machine independent
export TRUNK=$HOME/source/garli/garli/trunk/
export BRANCHES=$DEV/googleCodeRepo/branches/
export BEAG=$BRANCHES/beagle/
export PART=$BRANCHES/partitioning/
export TESTS=$DEV/git/garlitests/
export TB=$TRUNK/builds/
export PB=$PART/builds/

export BEAGLE=$DEV/beagle/beagle-lib
export BEAGLE_LIBPATH=$BEAGLE/builds/default/installed/usr/local/lib/

export PART_EXEC=$PART/builds/gccAss/installed/bin/Garli
export PART_EXEC_DEB=$PART/builds/gccAss.DEB/installed/bin/Garli
#export TRUNK_EXEC=$TRUNK/builds/gccAss/installed/bin/Garli
#export TRUNK_EXEC_DEB=$TRUNK/builds/gccAss.DEB/installed/bin/Garli
#export TRUNK_EXEC_OMP=$TRUNK/../tag-builds/2.1-release/gccDefault.10.7.5.OMP.builtgcc-4.8.1/installed/bin/Garli
export TESTING_EXEC=$PART_EXEC
export VER2_EXEC=$DEV/googleCodeRepo/tags/2.0-release/builds/gccAss/installed/bin/Garli
export INDEL_SCRIPTS=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/indelibleSims/scripts/
export ROOT_INDEL=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/indelibleSims/
export TANDY_SCRIPTS=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/tandyData/scripts
export ROOT_TANDY=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/tandyData/
export JANSEN_SCRIPTS=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/jansen64/scripts
export ROOT_JANSEN=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/jansen64/
export COMMON_SCRIPTS=$DEV/experiments/orientedGapTests/mixedModel.Oct2010/commonScripts/

export PYTHONPATH=$HOME/bin/pyscripts/:$HOME/bin/biopython/:$PYTHONPATH

<<DEP
export ANALYSIS_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/analysisScripts/
export ANALYSIS_SCRIPTS_FULLORYZA=$FULLORYZA_ROOT/scripts/analysisScripts/
export ALIGNMENT_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/alignmentScripts/
export GENERAL_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/generalScripts/
export ANNOTATION_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/annotationSplittingScripts/
export PLOT_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/plottingScripts/
export POST_PROCESS_SCRIPTS_ORYZA=$ORYZA_ROOT/scripts/postProcessScripts/
DEP

export ANALYSIS_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/analysisScripts/
export ANALYSIS_SCRIPTS_FULLORYZA=$FULLORYZA_SCRIPTS/analysisScripts/
export ALIGNMENT_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/alignmentScripts/
export GENERAL_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/generalScripts/
export ANNOTATION_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/annotationSplittingScripts/
export PLOT_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/plottingScripts/
export POST_PROCESS_SCRIPTS_ORYZA=$ORYZA_SCRIPTS/postProcessScripts/
#export NUMORYZA=11
export NUMFULLORYZA=9

export BEAST=/home/zwickl/libbuilds/BEASTv1.6.1/

export LAGAN_DIR=$HOME/libbuilds/lagan20/

#command aliases
alias desk='cd $DESK'
alias lsl='ls -ltrh'
alias xterm='xterm -ls'
alias gp='gnuplot'
alias lsl='ls -ltrh'
alias hist='shist | grep'
alias mi='nice make -j 2 && nice make install && pwd > $HOME/.lastMake'
alias mc='nice make -j 2 && nice make install && nice make check && pwd > $HOME/.lastMake'
alias dev='cd $DEV'
alias tunk='cd $TRUNK'
alias branch='cd $BRANCHES'
alias fin='grep Final'
alias cdtr='cd `ls -d $TESTS/rev* | tail -1`'
alias cdr='cd "`ls -dtr */ | tail -1`"'
#alias vir='vi `ls -trl . | grep -v "^d" | awk '{print $9}' | tail -n1`'
alias vir='vi `ls -tr . | tail -1`'
alias dush='du -shc *'
alias llog='*.log00.log'
alias cdt='cd $TESTS'
alias tabify="perl -p -i -e 's/[ ]+/\t/g'"
alias vig='vi garli.conf'
#alias dstat="disq_stat"
alias dsub="disq_sub"
alias ddel="disq_del"
alias pull="git pull origin"
alias push="git push origin"
alias shist="history | readHist"

function foreach (){
    if [  "$#" -eq 0 ];then
    echo enter a command followed by the files to apply it to
    echo quote commands with arguments, 
    echo i.e. foreach "ls -l" *.log
fi
    CMD=$1
    shift 1
    for FILE in  $@
    do
        $CMD $FILE
    done
}


function mark(){
    if [ ! "$#" -eq 1 ];then
        echo "Enter a name for this mark"
        return
    fi
    pwd > $HOME/.markedDirs/$1
}

function marks(){
    for DIR in $HOME/.markedDirs/*
    do
        echo
        echo ${DIR##*/}
        cat $DIR
    done
}

function cdm(){
    if [ ! "$#" -eq 1 ];then
        echo
        echo "Defined marks"
        for DIR in $HOME/.markedDirs/*
        do
            echo
            echo ${DIR##*/}
            cat $DIR
        done
        #echo "Enter a named mark"
        return
    fi
    cd `cat $HOME/.markedDirs/$1`
}

alias runLast='`cat $HOME/.lastMake`/installed/bin/Garli'
alias debLast='gdb `cat $HOME/.lastMake`/installed/bin/Garli'

alias phylonet='java -jar $HOME/Desktop/code/PhyloNet_3.5.4.jar'

#functions

function gits(){
    #this won't show untracked files, and is much faster
    git status -uno $@ | less
}

function gitsu(){
    git status $@ | less
}

function gitls(){
    git ls-files $@ | less
}

function inEachDir(){
	if [ $OS = "darwin" ];then
		source /Users/zwickl/.profile
	        for dir in */
	        do
	               	cd $dir || return 1
	                $@ || return 1
	                cd .. || return 1
	        done
	elif [ $OS = "linux" ];then
	for dir in */
		do
			cd $dir || exit
			$@ || exit
			cd .. || exit
		done
	fi
}


function mkcd(){
	mkdir $@
	cd $@
}

function vm(){
    if [ $# -eq 2 ];then
        echo $2 > $HOME/.vmark$1
    elif [ $# -eq 1 ];then
        vi `cat $HOME/.vmark$1`
    fi
}

function countFastaSeqs(){
    for i in $@
    do
        echo $i
        grep '^>' $i | wc -l
    done
}

function occurenceCount(){
    PATT=$1
    shift 1
    grep $PATT $@ | wc -l
}

function fileCount(){
    ls $@ | wc -l
}

if [[ $OS == 'darwin' ]]; then
	function rce(){
		vi $HOME/.profile
		source $HOME/.profile
	}
	function transpose(){
		cat $@ | rs -c -T	

	}
else
	function rce(){
		vi $HOME/.bashrc
		source $HOME/.bashrc
	}
fi

if [[ $OS == 'darwin' ]]; then
    function viewDagchainer(){
        ~/Desktop/code/DAGCHAINER/Java_XY_plotter/run_XYplot.pl $1 $2
    }
    function disableSpotlightIndexing(){
        #the other lines here actually disable spotlight entirely
        sudo mdutil -a -i off
        #sudo launchctl unload -w /System/Library/LaunchDaemons/
        #com.apple.metadata.mds.plist
    }
    function enableSpotlightIndexing(){
        sudo mdutil -a -i on
        #sudo launchctl load -w /System/Library/LaunchDaemons/
        #com.apple.metadata.mds.plist
    }
fi

function startScript(){
    if [ ! -e "$@" ];then
        echo "#!/bin/bash" > $@ 
        echo >> $@ 
        echo >> $@ 
        vi +3 $@
        chmod +x $@
    else
        vi $@
    fi
}

function startGnuplotScript(){
    echo "load ~/versionedScriptsAndDotfiles/generalScripts/default_gnuplot_styles.plt"  > $@
    echo >> $@
    echo >> $@
    vi +3 $@
}

function cnt(){
    ls $@ | wc -l
}

function zeroPadNumber(){
    if [ $# -gt "1" ];then
        DIGITS=$2
    else
        DIGITS=2
    fi

    RESULT=$1
    while [ ${#RESULT} -lt "$DIGITS" ]
    do
        RESULT=0$RESULT
    done
    echo $RESULT
}

function zeroPaddedNumberGenerator(){
    SERIES=`for ((VAL=$1;VAL<$2;VAL++))
    do
        zeroPadNumber $VAL $3
    done
    `
    echo $SERIES
}

function padToTwoDigits(){
   if [ $1 -lt 10 ];then
       NUM=0$1
   else
       NUM=$1
   fi
   echo $NUM
}

#mac specific
if [[ $OS == 'darwin' ]]; then
	alias temp='sysctl kern.cpu_temp'
	alias top='top -u'
	export COPYFILE_DISABLE=true
	source /opt/intel/cc/9.1.037/bin/iccvars.sh
	export PATH="/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"

elif [[ $OS == 'cygwin' ]]; then
	stty lnext ^q stop undef start undef
	export INPUTRC=$HOME/.inputrc
	alias killall='taskkill /f /im"$1"'
	alias c:='cd /cygdrive/c/'
	alias e:='cd /cygdrive/e/'
	alias f:='cd /cygdrive/f/'
	export CD=/cygdrive/c/
	export ED=/cygdrive/e/
	export FD=/cygdrive/f/

fi

#ignore sucessive duplicate commands
HISTIGNORE=\&
HISTFILESIZE=1000

if [[ $OS == 'darwin' ]]; then
    #for rbenv ruby utility
    PATH=$PATH:/Users/zwickl/.rbenv/bin

    # Setting PATH for Python 2.7
    # The orginal version is saved in .profile.pysave
    PATH="/Library/Frameworks/Python.framework/Versions/2.7/bin:${PATH}"
    export PATH

    export ANDROIDSDK=$HOME/android_dev/adt-bundle-mac-x86_64-20130522/sdk
    export ANDROIDNDK=$HOME/android_dev/android-ndk-r8e
    export ANDROIDNDKVER=r8e
    export ANDROIDAPI=14

    export PATH=$ANDROIDNDK:$ANDROIDSDK/tools:$PATH
fi

alias sq='squeue -o "%.18i %.9P %.8j %.15u %.2t %.10M %.6D %R"'

# Setting PATH for Python 3.8
# The original version is saved in .profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.8/bin:${PATH}"
export PATH

alias backupWorkingDir='find . -type f -not -name "*.gz" | xargs tar czf'   

#For UA HPC
# poke the cluster aliases to set PS1 instead of PROMPT_COMMAND to
# avoid video artifacts; the check for slurm-selector.sh is false if not
# on shell.
if [ -n "${PROMPT_COMMAND}" -a -r /usr/local/bin/slurm-selector.sh ]; then
      SavePS1=${PS1}
      # First, deal with default cluster selection
        Cur_Cluster=$(eval ${PROMPT_COMMAND} 2>/dev/null)
          PS1="${Cur_Cluster}${SavePS1}"
            unset PROMPT_COMMAND
            # now fix up the cluster aliases so they don't cause visual problems.
              for c in puma ocelote elgato; do
                      alias ${c}="PS1=\"(${c}) ${SavePS1}\"; . /usr/local/bin/slurm-selector.sh ${c}; unset PROMPT_COMMAND"
                  #    alias ${c}="PS1=\"(${c}) ${SavePS1}\"; $(alias ${c}); unset PROMPT_COMMAND"
                        done
                          unset Cur_Cluster SavePS1
                      fi

